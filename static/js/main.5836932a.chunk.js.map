{"version":3,"sources":["components/takara/images/animation.gif","components/takara/main.jsx","components/takara/settings.jsx","components/main/main.jsx","components/main/ErrorPage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Page","title","localStorage","getItem","document","concat","_useState","useState","_useState2","Object","slicedToArray","ViewSts","setViewSts","_useState3","_useState4","TakaraName","setTakaraName","_useState5","disabled","name","_useState6","TakaraList","setTakaraList","_useWindowSize","useWindowSize","width","height","useEffect","data","JSON","parse","clickTakaraNo","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","index","copy","wrap","_context","prev","next","setItem","stringify","setTimeout","reloadSelect2Page","stop","_x","apply","this","arguments","_ref2","_callee2","_context2","reloadMainPage","_ref3","_callee3","_context3","react_default","createElement","className","CircularProgress","color","src","animation","alt","react_confetti_min_default","recycle","role","aria-label","Button","variant","onClick","Container","fluid","size","trycnt","randomno","Math","floor","random","length","alert","clickRandommode","map","value","array","buttonVariant","slice","Title","setTitle","navigate","useNavigate","removeTakaralist","window","confirm","removeItem","location","reload","saveTakaralist","clickAddList","toConsumableArray","handlechangeName","e","_x2","handlechangeFlg","_x3","_x4","clasName","Form","Group","Control","type","placeholder","onChange","target","Row","Col","sm","controlId","Check","label","checked","Error","App","react_router_dom","basename","process","react_router","path","element","main_main","main","settings","ErrorPage","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wUCgJzBC,EAzIF,WAET,IAAIC,EAAQC,aAAaC,QAAQ,eAC5BF,IACDA,EAAQ,sBAEZG,SAASH,MAAT,GAAAI,OAAoBJ,GACpB,IAAAK,EAA8BC,mBAAS,WAAvCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOK,EAAPH,EAAA,GAAgBI,EAAhBJ,EAAA,GACAK,EAAoCN,mBAAS,MAA7CO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAOE,EAAPD,EAAA,GAAmBE,EAAnBF,EAAA,GACAG,EAAoCV,mBAChC,CACI,CAAEW,UAAU,EAAOC,KAAM,gDACzB,CAAED,UAAU,EAAOC,KAAM,kDAHjCC,EAAAX,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAAOI,EAAPD,EAAA,GAAmBE,EAAnBF,EAAA,GAMAG,EAA0BC,MAAlBC,EAARF,EAAQE,MAAOC,EAAfH,EAAeG,OAGfC,oBAAU,WACN,IAAMC,EAAOC,KAAKC,MAAM5B,aAAaC,QAAQ,eACzCyB,GACAN,EAAcM,GAElBhB,EAAW,SACZ,IAGH,IAAMmB,EAAa,eAAAC,EAAAvB,OAAAwB,EAAA,EAAAxB,CAAAyB,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAElB/B,EAAW,cAGL2B,EAAOlB,EAAWhB,UACnBiC,GAAOpB,UAAW,EACvBI,EAAciB,GACdrC,aAAa0C,QAAQ,aAAcf,KAAKgB,UAAUN,IAGlDvB,EAAcuB,EAAKD,GAAOnB,MAC1B2B,WAAWC,EAAmB,KAZZ,wBAAAN,EAAAO,SAAAX,MAAH,gBAAAY,GAAA,OAAAjB,EAAAkB,MAAAC,KAAAC,YAAA,GAkCbL,EAAiB,eAAAM,EAAA5C,OAAAwB,EAAA,EAAAxB,CAAAyB,EAAAC,EAAAC,KAAG,SAAAkB,IAAA,OAAApB,EAAAC,EAAAK,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,OACtB/B,EAAW,aACXkC,WAAWU,EAAgB,KAFL,wBAAAD,EAAAP,SAAAM,MAAH,yBAAAD,EAAAH,MAAAC,KAAAC,YAAA,GAIjBI,EAAc,eAAAC,EAAAhD,OAAAwB,EAAA,EAAAxB,CAAAyB,EAAAC,EAAAC,KAAG,SAAAsB,IAAA,OAAAxB,EAAAC,EAAAK,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACnB3B,EAAc,MACdJ,EAAW,QAFQ,wBAAA+C,EAAAX,SAAAU,MAAH,yBAAAD,EAAAP,MAAAC,KAAAC,YAAA,GAMpB,MAAgB,YAAZzC,EAEIiD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,OACXF,EAAAzB,EAAA0B,cAAA,UAAQC,UAAU,eACdF,EAAAzB,EAAA0B,cAAA,4BACAD,EAAAzB,EAAA0B,cAACE,EAAA,EAAD,CAAkBC,MAAM,gBAIjB,cAAZrD,EAEHiD,EAAAzB,EAAA0B,cAAA,UAAQC,UAAU,cACdF,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,6BACXF,EAAAzB,EAAA0B,cAAA,OAAKI,IAAKC,IAAWC,IAAI,+BAIlB,cAAZxD,EAEHiD,EAAAzB,EAAA0B,cAAA,UAAQC,UAAU,cACdF,EAAAzB,EAAA0B,cAACO,EAAAjC,EAAD,CACIV,MAAOA,EACPC,OAAQA,EACR2C,SAAS,IAEbT,EAAAzB,EAAA0B,cAAA,UAAID,EAAAzB,EAAA0B,cAAA,QAAMS,KAAK,MAAMC,aAAW,WAA5B,sHACJX,EAAAzB,EAAA0B,cAAA,+BAAQ9C,EAAR,sBACA6C,EAAAzB,EAAA0B,cAACW,EAAA,EAAD,CAAQC,QAAQ,SAASX,UAAU,cAAcY,QAzDzC,WAEhBlB,MAuDQ,+CAIW,SAAZ7C,EAEHiD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,OACXF,EAAAzB,EAAA0B,cAAA,UAAQC,UAAU,cACdF,EAAAzB,EAAA0B,cAACc,EAAA,EAAD,CAAWC,OAAK,EAACd,UAAU,UACvBF,EAAAzB,EAAA0B,cAAA,MAAIC,UAAU,QAAOF,EAAAzB,EAAA0B,cAAA,YAAO5D,IAC5B2D,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,QACXF,EAAAzB,EAAA0B,cAAEW,EAAA,EAAF,CAASC,QAAQ,UAAUI,KAAK,KAAKH,QAAS,kBAhE9C,WAEpB,IADA,IAAII,EAAS,IACA,CACT,IAAMC,EAAWC,KAAKC,MAAMD,KAAKE,SAAW7D,EAAW8D,QACvD,IAAsC,IAAlC9D,EAAW0D,GAAU7D,UAAsBG,EAAW0D,GAAU5D,KAAM,CACtEY,EAAcgD,GACd,MACG,GAAID,GAAUzD,EAAW8D,OAAQ,CACpCC,MAAM,kFACN,MAEJN,GAAU,GAqD0DO,KAApD,yCAEJzB,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,eACVzC,EAAWiE,IAAI,SAAUC,EAAOjD,EAAOkD,GACpC,IAAIC,EAMJ,OAJIA,EADAnD,EAAQ,IAAM,EACE,kBAEA,mBAEG,IAAnBiD,EAAMrE,UAAsBqE,EAAMpE,KAE9ByC,EAAAzB,EAAA0B,cAAA,UAASC,UAAW2B,EAAef,QAAS,kBAAM3C,EAAcO,MAAU,MAAQA,EAAQ,IAAIoD,OAAO,IAIrG9B,EAAAzB,EAAA0B,cAAA,UAASC,UAAU,qBAAqB5C,UAAQ,IAAG,MAAQoB,EAAQ,IAAIoD,OAAO,eAvB3G,mCCMI1F,EA/GF,WAET,IAAAM,EAA0BC,mBAASL,aAAaC,QAAQ,gBAAxDK,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOqF,EAAPnF,EAAA,GAAcoF,EAAdpF,EAAA,GACKmF,GACDC,EAAS,sBAEbxF,SAASH,MAAT,oCACA,IAAM4F,EAAWC,cACjBjF,EAAoCN,mBAChC,CACI,CAAEW,UAAU,EAAOC,KAAM,gDACzB,CAAED,UAAU,EAAOC,KAAM,kDAHjCL,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAOQ,EAAPP,EAAA,GAAmBQ,EAAnBR,EAAA,GAQAa,oBAAU,WACN,IAAMC,EAAOC,KAAKC,MAAM5B,aAAaC,QAAQ,eACzCyB,GACAN,EAAcM,IAEnB,IAGH,IAAMmE,EAAmB,YAEN,IADAC,OAAOC,QAAQ,wEAE1B/F,aAAagG,WAAW,cACxBhG,aAAagG,WAAW,eACxBF,OAAOG,SAASC,WAGlBC,EAAiB,WACnBnG,aAAa0C,QAAQ,aAAcf,KAAKgB,UAAUxB,IAClDnB,aAAa0C,QAAQ,cAAe+C,IAErB,IADAK,OAAOC,QAAQ,uFAE1BJ,EAAS,MAGXS,EAAY,eAAAtE,EAAAvB,OAAAwB,EAAA,EAAAxB,CAAAyB,EAAAC,EAAAC,KAAG,SAAAC,IAAA,OAAAH,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACjBrB,EAAa,GAAAjB,OAAAI,OAAA8F,EAAA,EAAA9F,CAAKY,GAAL,CAAiB,CAAEH,UAAU,EAAOC,KAAM,SADtC,wBAAAsB,EAAAO,SAAAX,MAAH,yBAAAL,EAAAkB,MAAAC,KAAAC,YAAA,GAGZoD,EAAgB,eAAAnD,EAAA5C,OAAAwB,EAAA,EAAAxB,CAAAyB,EAAAC,EAAAC,KAAG,SAAAkB,EAAOmD,EAAGnE,GAAV,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,QACfJ,EAAOlB,EAAWhB,UACnBiC,GAAOnB,KAAOsF,EACnBnF,EAAciB,GAHO,wBAAAgB,EAAAP,SAAAM,MAAH,gBAAAL,EAAAyD,GAAA,OAAArD,EAAAH,MAAAC,KAAAC,YAAA,GAKhBuD,EAAe,eAAAlD,EAAAhD,OAAAwB,EAAA,EAAAxB,CAAAyB,EAAAC,EAAAC,KAAG,SAAAsB,EAAO+C,EAAGnE,GAAV,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,QACdJ,EAAOlB,EAAWhB,UACnBiC,GAAOpB,SAAWuF,EACvBnF,EAAciB,GAHM,wBAAAoB,EAAAX,SAAAU,MAAH,gBAAAkD,EAAAC,GAAA,OAAApD,EAAAP,MAAAC,KAAAC,YAAA,GAOrB,OACIQ,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,OACXF,EAAAzB,EAAA0B,cAAA,UAAQiD,SAAS,cACblD,EAAAzB,EAAA0B,cAACc,EAAA,EAAD,CAAWC,OAAK,EAACd,UAAU,UACvBF,EAAAzB,EAAA0B,cAAA,MAAIC,UAAU,QAAOF,EAAAzB,EAAA0B,cAAA,6BACrBD,EAAAzB,EAAA0B,cAAEW,EAAA,EAAF,CAASC,QAAQ,UAAUI,KAAK,KAAKH,QAAS,kBAAM4B,MAApD,sBACA1C,EAAAzB,EAAA0B,cAAEW,EAAA,EAAF,CAASC,QAAQ,UAAUI,KAAK,KAAKH,QAAS,kBAAM2B,MAApD,gBACAzC,EAAAzB,EAAA0B,cAAEW,EAAA,EAAF,CAASC,QAAQ,UAAUI,KAAK,KAAKH,QAAS,kBAAMqB,MAApD,kCACAnC,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,QACXF,EAAAzB,EAAA0B,cAACkD,EAAA,EAAD,KACInD,EAAAzB,EAAA0B,cAACkD,EAAA,EAAKC,MAAN,CAAYlD,UAAU,eAClBF,EAAAzB,EAAA0B,cAACkD,EAAA,EAAKE,QAAN,CACIC,KAAK,OACLC,YAAY,2BACZC,SAAU,SAAAX,GAAC,OAAIb,EAASa,EAAEY,OAAO9B,QACjCA,MAAOI,KAGdtE,EAAWiE,IAAI,SAAUC,EAAOjD,EAAOkD,GACpC,OACI5B,EAAAzB,EAAA0B,cAACyD,EAAA,EAAD,KACI1D,EAAAzB,EAAA0B,cAAC0D,EAAA,EAAD,CAAKC,GAAI,GAAIlF,EAAQ,GACrBsB,EAAAzB,EAAA0B,cAAC0D,EAAA,EAAD,CAAKC,GAAI,GACL5D,EAAAzB,EAAA0B,cAACkD,EAAA,EAAKC,MAAN,CAAYlD,UAAU,eAClBF,EAAAzB,EAAA0B,cAACkD,EAAA,EAAKE,QAAN,CACIC,KAAK,OACLC,YAAY,qBACZC,SAAU,SAAAX,GAAC,OAAID,EAAiBC,EAAEY,OAAO9B,MAAOjD,IAChDiD,MAAOA,EAAMpE,SAIzByC,EAAAzB,EAAA0B,cAAC0D,EAAA,EAAD,CAAKC,GAAI,GACL5D,EAAAzB,EAAA0B,cAACkD,EAAA,EAAKC,MAAN,CAAYlD,UAAU,OAAO2D,UAAU,qBACnC7D,EAAAzB,EAAA0B,cAACkD,EAAA,EAAKW,MAAN,CACIR,KAAK,WACLS,MAAM,eACNP,SAAU,SAAAX,GAAC,OAAIE,EAAgBF,EAAEY,OAAOO,QAAStF,IACjDsF,QAASrC,EAAMrE,kBAS/C0C,EAAAzB,EAAA0B,cAAEW,EAAA,EAAF,CAASC,QAAQ,UAAUI,KAAK,KAAKH,QAAS,kBAAM4B,MAApD,sBACA1C,EAAAzB,EAAA0B,cAAEW,EAAA,EAAF,CAASC,QAAQ,UAAUI,KAAK,KAAKH,QAAS,kBAAM2B,MAApD,gBACAzC,EAAAzB,EAAA0B,cAAEW,EAAA,EAAF,CAASC,QAAQ,UAAUI,KAAK,KAAKH,QAAS,kBAAMqB,MAApD,sCC5EL/F,EA5BF,WAEb,IAAM6F,EAAWC,cAEb1F,SAASH,MAAT,GAAAI,OADY,6BAUZ,OACIuD,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,OACXF,EAAAzB,EAAA0B,cAAA,UAAQC,UAAU,cACdF,EAAAzB,EAAA0B,cAACc,EAAA,EAAD,CAAWC,OAAK,EAACd,UAAU,UACvBF,EAAAzB,EAAA0B,cAAA,MAAIC,UAAU,QAAOF,EAAAzB,EAAA0B,cAAA,YAdzB,8BAeID,EAAAzB,EAAA0B,cAAA,OAAKC,UAAU,eACXF,EAAAzB,EAAA0B,cAAEW,EAAA,EAAF,CAASC,QAAQ,UAAUI,KAAK,KAAKH,QAAS,WAX9DmB,EAAS,WAWO,0BACAjC,EAAAzB,EAAA0B,cAAEW,EAAA,EAAF,CAASC,QAAQ,UAAUI,KAAK,KAAKH,QAAS,WAT9DmB,EAAS,cASO,+BCbTgC,EATD,WAEZ,OACEjE,EAAAzB,EAAA0B,cAAA,WACED,EAAAzB,EAAA0B,cAAA,iBACAD,EAAAzB,EAAA0B,cAAA,4DCWSiE,SAbH,WACV,OACElE,EAAAzB,EAAA0B,cAACkE,EAAA,EAAD,CAAeC,SAAUC,mBACvBrE,EAAAzB,EAAA0B,cAACqE,EAAA,EAAD,KACEtE,EAAAzB,EAAA0B,cAACqE,EAAA,EAAD,CAAOC,KAAK,IAAIC,QAASxE,EAAAzB,EAAA0B,cAACwE,EAAD,QACzBzE,EAAAzB,EAAA0B,cAACqE,EAAA,EAAD,CAAOC,KAAK,QAAQC,QAASxE,EAAAzB,EAAA0B,cAACyE,EAAD,QAC7B1E,EAAAzB,EAAA0B,cAACqE,EAAA,EAAD,CAAOC,KAAK,WAAWC,QAASxE,EAAAzB,EAAA0B,cAAC0E,EAAD,QAChC3E,EAAAzB,EAAA0B,cAACqE,EAAA,EAAD,CAAOC,KAAK,KAAKC,QAASxE,EAAAzB,EAAA0B,cAAC2E,EAAD,QAJ5B,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC7I,EAAA2G,EAAA,GAAAmC,KAAA9I,EAAA+I,KAAA,UAAqBD,KAAK,SAAA5G,GAAiD,IAA9C8G,EAA8C9G,EAA9C8G,OAAQC,EAAsC/G,EAAtC+G,OAAQC,EAA8BhH,EAA9BgH,OAAQC,EAAsBjH,EAAtBiH,OAAQC,EAAclH,EAAdkH,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCAdS,IAASC,OACPxF,EAAAzB,EAAA0B,cAACD,EAAAzB,EAAMkH,WAAP,KACEzF,EAAAzB,EAAA0B,cAACyF,EAAD,OAEFlJ,SAASmJ,eAAe,SAM1Bd","file":"static/js/main.5836932a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/animation.6acae9c3.gif\";","import React, { useEffect, useState } from 'react';\r\nimport { Button, Container } from 'react-bootstrap';\r\nimport Confetti from 'react-confetti'\r\nimport useWindowSize from 'react-use/lib/useWindowSize'\r\nimport animation from \"./images/animation.gif\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nconst Page = () => {\r\n    // 変数定義\r\n    let title = localStorage.getItem('takaratitle')\r\n    if (!title) {\r\n        title = \"抽選会\"\r\n    }\r\n    document.title = `${title}`\r\n    const [ViewSts, setViewSts] = useState(\"Loading\")\r\n    const [TakaraName, setTakaraName] = useState(null)\r\n    const [TakaraList, setTakaraList] = useState(\r\n        [\r\n            { disabled: false, name: \"[サンプル]景品①\" },\r\n            { disabled: false, name: \"[サンプル]景品②\" },\r\n        ]\r\n    )\r\n    const { width, height } = useWindowSize()\r\n\r\n    // 初回処理\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem('takaralist'));\r\n        if (data) {\r\n            setTakaraList(data)\r\n        }\r\n        setViewSts(\"Main\")\r\n    }, []);\r\n\r\n    // Button Click Action\r\n    const clickTakaraNo = async (index) => {\r\n        // 抽選中画面表示\r\n        setViewSts(\"selected1\")\r\n\r\n        // フラグ書き換え・localstrage更新\r\n        const copy = TakaraList.concat()\r\n        copy[index].disabled = true\r\n        setTakaraList(copy)\r\n        localStorage.setItem('takaralist', JSON.stringify(copy));\r\n\r\n        // 景品取得・表示\r\n        setTakaraName(copy[index].name)\r\n        setTimeout(reloadSelect2Page, 3 * 1000);\r\n    }\r\n    const clickReload = () => {\r\n        //window.location.reload(1);\r\n        reloadMainPage()\r\n    }\r\n    const clickRandommode = () => {\r\n        let trycnt = 0\r\n        while (true) {\r\n            const randomno = Math.floor(Math.random() * TakaraList.length);\r\n            if (TakaraList[randomno].disabled === false && TakaraList[randomno].name) {\r\n                clickTakaraNo(randomno)\r\n                break;\r\n            } else if (trycnt >= TakaraList.length) {\r\n                alert(\"抽選可能な番号がありません\")\r\n                break;\r\n            }\r\n            trycnt += 1\r\n        }\r\n    }\r\n\r\n    // ページ遷移関数\r\n    const reloadSelect2Page = async () => {\r\n        setViewSts(\"selected2\")\r\n        setTimeout(reloadMainPage, 60 * 1000)\r\n    }\r\n    const reloadMainPage = async () => {\r\n        setTakaraName(null)\r\n        setViewSts(\"Main\")\r\n    }\r\n\r\n    // ページレイアウト\r\n    if (ViewSts === \"Loading\") {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"Main-header\">\r\n                    <h4>Now Loading...</h4>\r\n                    <CircularProgress color=\"secondary\" />\r\n                </header>\r\n            </div>\r\n        )\r\n    } else if (ViewSts === \"selected1\") {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <div className=\"resizeimage + text-center\">\r\n                    <img src={animation} alt=\"抽選中......\" />\r\n                </div>\r\n            </header>\r\n        )\r\n    } else if (ViewSts === \"selected2\") {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <Confetti\r\n                    width={width}\r\n                    height={height}\r\n                    recycle={true}\r\n                />\r\n                <h2><span role=\"img\" aria-label=\"cracker\">　　　🎉 🎉抽 選 結 果🎉 🎉　　　</span></h2>\r\n                <h3>　　　{TakaraName}　　　</h3>\r\n                <Button variant=\"button\" className=\"text-muted \" onClick={clickReload}>メインページへ</Button>\r\n\r\n            </header>\r\n        )\r\n    } else if (ViewSts === \"Main\") {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <Container fluid className=\"center\">\r\n                        <h2 className=\"mt-2\"><span>{title}</span></h2>\r\n                        <div className=\"mb-2\">\r\n                            < Button variant=\"primary\" size=\"lg\" onClick={() => clickRandommode()}>ランダム抽選</Button>\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            {TakaraList.map(function (value, index, array) {\r\n                                let buttonVariant\r\n                                if (index % 2 === 0) {\r\n                                    buttonVariant = \"btn-circle-3d-1\"\r\n                                } else {\r\n                                    buttonVariant = \"btn-circle-3d-2\"\r\n                                }\r\n                                if (value.disabled === false && value.name) {\r\n                                    return (\r\n                                        < button className={buttonVariant} onClick={() => clickTakaraNo(index)}>{('00' + (index + 1)).slice(-3)}</button>\r\n                                    )\r\n                                } else {\r\n                                    return (\r\n                                        < button className=\"btn-circle-3d-gray\" disabled>{('00' + (index + 1)).slice(-3)}</button>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    </Container>\r\n                </header >\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Page","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, Container, Col, Form, Row } from 'react-bootstrap';\r\n\r\nconst Page = () => {\r\n    // 変数定義\r\n    const [Title, setTitle] = useState(localStorage.getItem('takaratitle'))\r\n    if (!Title) {\r\n        setTitle(\"抽選会\")\r\n    }\r\n    document.title = `抽選会 - 設定`\r\n    const navigate = useNavigate()\r\n    const [TakaraList, setTakaraList] = useState(\r\n        [\r\n            { disabled: false, name: \"[サンプル]景品①\" },\r\n            { disabled: false, name: \"[サンプル]景品②\" },\r\n        ]\r\n    )\r\n\r\n    // 初回処理\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem('takaralist'));\r\n        if (data) {\r\n            setTakaraList(data)\r\n        }\r\n    }, []);\r\n\r\n    // Button Click Action\r\n    const removeTakaralist = () => {\r\n        const result = window.confirm('本当によろしいですか？');\r\n        if (result === true) {\r\n            localStorage.removeItem(\"takaralist\");\r\n            localStorage.removeItem(\"takaratitle\");\r\n            window.location.reload();\r\n        }\r\n    }\r\n    const saveTakaralist = () => {\r\n        localStorage.setItem('takaralist', JSON.stringify(TakaraList));\r\n        localStorage.setItem('takaratitle', Title);\r\n        const result = window.confirm('保存成功! MainPageに遷移しますか？');\r\n        if (result === true) {\r\n            navigate(\"/\");\r\n        }\r\n    }\r\n    const clickAddList = async () => {\r\n        setTakaraList([...TakaraList, { disabled: false, name: null }]);\r\n    }\r\n    const handlechangeName = async (e, index) => {\r\n        const copy = TakaraList.concat()\r\n        copy[index].name = e\r\n        setTakaraList(copy)\r\n    }\r\n    const handlechangeFlg = async (e, index) => {\r\n        const copy = TakaraList.concat()\r\n        copy[index].disabled = e\r\n        setTakaraList(copy)\r\n    }\r\n\r\n    // ページレイアウト\r\n    return (\r\n        <div className=\"App\">\r\n            <header clasName=\"App-header\">\r\n                <Container fluid className=\"center\">\r\n                    <h2 className=\"mt-2\"><span>設定</span></h2>\r\n                    < Button variant=\"primary\" size=\"lg\" onClick={() => clickAddList()}>++ 追加 ++</Button>\r\n                    < Button variant=\"primary\" size=\"lg\" onClick={() => saveTakaralist()}>保存</Button>\r\n                    < Button variant=\"primary\" size=\"lg\" onClick={() => removeTakaralist()}>全項目削除</Button>\r\n                    <div className=\"card\">\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3 + ml-2\">\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"タイトル\"\r\n                                    onChange={e => setTitle(e.target.value)}\r\n                                    value={Title}\r\n                                />\r\n                            </Form.Group>\r\n                            {TakaraList.map(function (value, index, array) {\r\n                                return (\r\n                                    <Row>\r\n                                        <Col sm={1}>{index + 1}</Col>\r\n                                        <Col sm={5}>\r\n                                            <Form.Group className=\"mb-3 + ml-2\">\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"景品名\"\r\n                                                    onChange={e => handlechangeName(e.target.value, index)}\r\n                                                    value={value.name}\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col sm={1}>\r\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                                                <Form.Check\r\n                                                    type=\"checkbox\"\r\n                                                    label=\"終了\"\r\n                                                    onChange={e => handlechangeFlg(e.target.checked, index)}\r\n                                                    checked={value.disabled}\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                )\r\n                            })}\r\n                        </Form>\r\n                    </div>\r\n                    < Button variant=\"primary\" size=\"lg\" onClick={() => clickAddList()}>++ 追加 ++</Button>\r\n                    < Button variant=\"primary\" size=\"lg\" onClick={() => saveTakaralist()}>保存</Button>\r\n                    < Button variant=\"primary\" size=\"lg\" onClick={() => removeTakaralist()}>全項目削除</Button>\r\n                </Container>\r\n            </header>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Page","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, Container } from 'react-bootstrap';\r\n\r\nconst Page = () => {\r\n    // 変数定義\r\nconst navigate = useNavigate();\r\n    let title = \"Home - 抽選会\"\r\n    document.title = `${title}`\r\n\r\n    // Button Click Action\r\n    const clickMainPage = () => {\r\n        navigate(\"/main\");\r\n    }\r\n    const clickSettingPage = () => {\r\n        navigate(\"/setting\");\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <Container fluid className=\"center\">\r\n                    <h2 className=\"mt-2\"><span>{title}</span></h2>\r\n                    <div className=\"text-center\">\r\n                        < Button variant=\"primary\" size=\"lg\" onClick={() => clickMainPage()}>抽選Pageへ</Button>\r\n                        < Button variant=\"primary\" size=\"lg\" onClick={() => clickSettingPage()}>設定Pageへ</Button>\r\n                    </div>\r\n                </Container>\r\n            </header >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Page","import React from 'react';\r\n\r\nconst Error = () => {\r\n\r\n  return (\r\n    <div>\r\n      <h1>404</h1>\r\n      <p>Sorry, the page you're looking con not found.</p>\r\n    </div>\r\n  )\r\n}\r\nexport default Error;","import React from 'react';\r\nimport { BrowserRouter , Routes, Route } from 'react-router-dom';\r\nimport { MainPage, SettingPage } from './components/takara';\r\nimport { ErrorPage, HomePage } from './components/main';\r\nimport \"./App.css\";\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Routes>\r\n        <Route path='/' element={<HomePage />} />\r\n        <Route path='/main' element={<MainPage />} />\r\n        <Route path='/setting' element={<SettingPage />} />\r\n        <Route path='/*' element={<ErrorPage/>} /> {/*not foundの時*/}\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}