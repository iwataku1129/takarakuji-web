{"version":3,"sources":["components/takara/images/animation1.gif","components/takara/images/animation2.gif","components/takara/main.jsx","components/takara/settings.jsx","components/main/main.jsx","components/main/ErrorPage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Page","_useState","useState","_useState2","Object","slicedToArray","Title","setTitle","_useState3","_useState4","ViewSts","setViewSts","_useState5","_useState6","TakaraName","setTakaraName","_useState7","disabled","name","_useState8","TakaraList","setTakaraList","_useState9","value","label","_useState10","AnimationName","setAnimationName","_useWindowSize","useWindowSize","width","height","_useState11","_useState12","Timeoutid","setTimeoutid","useEffect","title","localStorage","getItem","document","concat","data","JSON","parse","data2","clickTakaraNo","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","index","copy","wrap","_context","prev","next","setItem","stringify","setTimeout","reloadSelect2Page","stop","_x","apply","this","arguments","clickRandommode","_ref2","_callee2","checkResult","endCheckflg","randomno","i","_context2","Math","floor","random","length","abrupt","alert","_ref3","_callee3","id","_context3","reloadMainPage","_ref4","_callee4","_context4","clearTimeout","react_default","createElement","className","CircularProgress","color","src","animation1","alt","animation2","Container","react_confetti_min_default","recycle","role","aria-label","Button","variant","onClick","fluid","size","map","array","buttonVariant","slice","navigate","useNavigate","AnimationList","getTitle","removeTakaralist","window","confirm","removeItem","location","reload","saveTakaralist","clickAddList","toConsumableArray","handlechangeName","e","_x2","handlechangeFlg","_ref5","_callee5","_context5","_x3","_x4","clasName","style","textAlign","Form","Row","Col","sm","react_select_esm","options","onChange","defaultValue","Group","Control","type","placeholder","target","controlId","Check","checked","Error","App","react_router_dom","basename","process","react_router","path","element","main_main","main","settings","ErrorPage","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.98b4fde0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/animation1.6acae9c3.gif\";","module.exports = __webpack_public_path__ + \"static/media/animation2.987b8d82.gif\";","import React, { useEffect, useState } from 'react';\r\nimport { Button, Container } from 'react-bootstrap';\r\nimport Confetti from 'react-confetti'\r\nimport useWindowSize from 'react-use/lib/useWindowSize'\r\nimport animation1 from \"./images/animation1.gif\";\r\nimport animation2 from \"./images/animation2.gif\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nconst Page = () => {\r\n    // 変数定義\r\n    const [Title, setTitle] = useState(null)\r\n    const [ViewSts, setViewSts] = useState(\"Loading\")\r\n    const [TakaraName, setTakaraName] = useState(null)\r\n    const [TakaraList, setTakaraList] = useState(\r\n        [\r\n            { disabled: false, name: \"[サンプル]景品①\" },\r\n            { disabled: false, name: \"[サンプル]景品②\" },\r\n        ]\r\n    )\r\n    const [AnimationName, setAnimationName] = useState({ value: '1', label: 'スタンダード' })\r\n    const { width, height } = useWindowSize()\r\n    const [Timeoutid, setTimeoutid] = useState(null)\r\n\r\n    // 初回処理\r\n    useEffect(() => {\r\n        let title = localStorage.getItem('takaratitle')\r\n        if (!title) {\r\n            title = \"抽選会\"\r\n        }\r\n        document.title = `${title}`\r\n        setTitle(title)\r\n        const data = JSON.parse(localStorage.getItem('takaralist'));\r\n        if (data) {\r\n            setTakaraList(data)\r\n        }\r\n        const data2 = JSON.parse(localStorage.getItem('animation'));\r\n        if (data2) {\r\n            setAnimationName(data2)\r\n        }\r\n        setViewSts(\"Main\")\r\n    }, []);\r\n\r\n    // Button Click Action\r\n    const clickTakaraNo = async (index) => {\r\n        // 抽選中画面表示\r\n        setViewSts(\"selected1\")\r\n\r\n        // フラグ書き換え・localstrage更新\r\n        const copy = TakaraList.concat()\r\n        copy[index].disabled = true\r\n        setTakaraList(copy)\r\n        localStorage.setItem('takaralist', JSON.stringify(copy));\r\n\r\n        // 景品取得・表示\r\n        setTakaraName(copy[index].name)\r\n        setTimeout(reloadSelect2Page, 5 * 1000);\r\n    }\r\n    const clickReload = () => {\r\n        //window.location.reload(1);\r\n        reloadMainPage()\r\n    }\r\n    const clickRandommode = async () => {\r\n        let checkResult = TakaraList    // 抽選実施有無の管理\r\n        let endCheckflg = false\r\n        while (true) {\r\n            // 結果登録用配列作成\r\n            const randomno = Math.floor(Math.random() * TakaraList.length);\r\n            if (TakaraList[randomno].disabled === false && TakaraList[randomno].name) {\r\n                clickTakaraNo(randomno)\r\n                break;\r\n            } else {\r\n                checkResult[randomno].disabled = true\r\n            }\r\n            for (let i = 0; i < checkResult.length; i++) {\r\n                if (checkResult[i].disabled === false) {\r\n                    break;\r\n                } else if (i === checkResult.length - 1) {\r\n                    alert(\"抽選可能な番号がありません\")\r\n                    endCheckflg = true  // whileから抜ける為のflg\r\n                    break;\r\n                }\r\n            }\r\n            if (endCheckflg === true) {\r\n                break;  // whileから抜ける\r\n            }\r\n        }\r\n    }\r\n\r\n    // ページ遷移関数\r\n    const reloadSelect2Page = async () => {\r\n        setViewSts(\"selected2\")\r\n        let id = setTimeout(reloadMainPage, 60 * 1000)\r\n        setTimeoutid(id)\r\n    }\r\n    const reloadMainPage = async () => {\r\n        clearTimeout(Timeoutid)\r\n        setTakaraName(null)\r\n        setViewSts(\"Main\")\r\n    }\r\n\r\n    // ページレイアウト\r\n    if (ViewSts === \"Loading\") {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"Main-header\">\r\n                    <h4>Now Loading...</h4>\r\n                    <CircularProgress color=\"secondary\" />\r\n                </header>\r\n            </div>\r\n        )\r\n    } else if (ViewSts === \"selected1\") {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <div className=\"resizeimage + text-center\">\r\n                    {(() => {\r\n                        if (AnimationName.value === '1') {\r\n                            return (<img src={animation1} alt=\"抽選中......\" />)\r\n                        } else {\r\n                            return (<img src={animation2} alt=\"抽選中......\" />)\r\n                        }\r\n                    })()}\r\n                </div>\r\n            </header>\r\n        )\r\n    } else if (ViewSts === \"selected2\") {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <Container>\r\n                    <Confetti\r\n                        width={width}\r\n                        height={height}\r\n                        recycle={true}\r\n                    />\r\n                    <h2><span role=\"img\" aria-label=\"cracker\">🎉🎉抽 選 結 果🎉🎉</span></h2>\r\n                    <h3>{TakaraName}</h3>\r\n                </Container>\r\n                <Button variant=\"button\" className=\"text-muted\" onClick={clickReload}>メインページへ</Button>\r\n            </header>\r\n        )\r\n    } else if (ViewSts === \"Main\") {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <Container fluid className=\"center\">\r\n                        <h2 className=\"mt-2\"><span>{Title}</span></h2>\r\n                        <div className=\"mb-2\">\r\n                            < Button variant=\"danger\" size=\"lg\" onClick={() => clickRandommode()}>神様にまかせるボタン</Button>\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            {TakaraList.map(function (value, index, array) {\r\n                                let buttonVariant\r\n                                if (index % 2 === 0) {\r\n                                    buttonVariant = \"btn-circle-3d-1\"\r\n                                } else {\r\n                                    buttonVariant = \"btn-circle-3d-2\"\r\n                                }\r\n                                if (value.disabled === false && value.name) {\r\n                                    return (\r\n                                        < button className={buttonVariant} onClick={() => clickTakaraNo(index)}>{('00' + (index + 1)).slice(-3)}</button>\r\n                                    )\r\n                                } else {\r\n                                    return (\r\n                                        < button className=\"btn-circle-3d-gray\" disabled>{('00' + (index + 1)).slice(-3)}</button>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    </Container>\r\n                </header >\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Page","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, Container, Col, Form, Row } from 'react-bootstrap';\r\nimport Select from 'react-select'\r\n\r\nconst Page = () => {\r\n    // 変数定義\r\n    const [Title, setTitle] = useState(null)\r\n    document.title = `抽選会 - 設定`\r\n    const navigate = useNavigate()\r\n    const [TakaraList, setTakaraList] = useState(\r\n        [\r\n            { disabled: false, name: \"[サンプル]景品①\" },\r\n            { disabled: false, name: \"[サンプル]景品②\" },\r\n        ]\r\n    )\r\n    const [AnimationList,] = useState([{ value: '1', label: 'スタンダード' }, { value: '2', label: 'オリジナル' }])\r\n    const [AnimationName, setAnimationName] = useState(AnimationList[0])\r\n\r\n    // 初回処理\r\n    useEffect(() => {\r\n        // 抽選ページ タイトル取得\r\n        let getTitle = localStorage.getItem('takaratitle')\r\n        if (!getTitle) {\r\n            getTitle = \"抽選会\"\r\n        }\r\n        setTitle(getTitle)\r\n        // 抽選リスト取得\r\n        const data = JSON.parse(localStorage.getItem('takaralist'));\r\n        if (data) {\r\n            setTakaraList(data)\r\n        }\r\n        // 抽選中アニメーション選択\r\n        const data2 = JSON.parse(localStorage.getItem('animation'));\r\n        if (data2) {\r\n            setAnimationName(data2)\r\n        }\r\n    }, []);\r\n\r\n    // Button Click Action\r\n    const removeTakaralist = async () => {\r\n        const result = window.confirm('本当によろしいですか？');\r\n        if (result === true) {\r\n            localStorage.removeItem(\"takaralist\");\r\n            localStorage.removeItem(\"takaratitle\");\r\n            localStorage.removeItem(\"animation\");\r\n            window.location.reload();\r\n        }\r\n    }\r\n    const saveTakaralist = async () => {\r\n        localStorage.setItem('takaralist', JSON.stringify(TakaraList));\r\n        localStorage.setItem('animation', JSON.stringify(AnimationName));\r\n        localStorage.setItem('takaratitle', Title);\r\n        const result = window.confirm('保存成功! MainPageに遷移しますか？');\r\n        if (result === true) {\r\n            navigate(\"/\");\r\n        }\r\n    }\r\n    const clickAddList = async () => {\r\n        setTakaraList([...TakaraList, { disabled: false, name: null }]);\r\n    }\r\n    const handlechangeName = async (e, index) => {\r\n        const copy = TakaraList.concat()\r\n        copy[index].name = e\r\n        setTakaraList(copy)\r\n    }\r\n    const handlechangeFlg = async (e, index) => {\r\n        const copy = TakaraList.concat()\r\n        copy[index].disabled = e\r\n        setTakaraList(copy)\r\n    }\r\n\r\n    // ページレイアウト\r\n    return (\r\n        <div className=\"App\">\r\n            <header clasName=\"App-header\">\r\n                <Container className=\"center\">\r\n                    <h2 className=\"mt-2\"><span>設定</span></h2>\r\n                    < Button variant=\"info\" size=\"lg\" onClick={() => clickAddList()}>++ 追加 ++</Button>\r\n                    < Button variant=\"info\" size=\"lg\" onClick={() => saveTakaralist()}>保存</Button>\r\n                    < Button variant=\"info\" size=\"lg\" onClick={() => removeTakaralist()}>全項目削除</Button>\r\n                    <div className=\"card\" style={{ textAlign: \"left\" }}>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col sm={1}>抽選中画面</Col>\r\n                                <Col sm={4}>\r\n                                    <Select\r\n                                        options={AnimationList}\r\n                                        onChange={e => setAnimationName(e)}\r\n                                        //placeholder=\"Select Category...\"\r\n                                        //isClearable={true}\r\n                                        //isSearchable={true}\r\n                                        //isLoading={LoadFlg}\r\n                                        defaultValue={AnimationName}\r\n                                        //isDisabled={query.flg !== undefined ? true : false}\r\n                                        value={AnimationName}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col sm={1}>タイトル</Col>\r\n                                <Col sm={4}>\r\n                                    <Form.Group className=\"mb-3 + ml-2\">\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"タイトル\"\r\n                                            onChange={e => setTitle(e.target.value)}\r\n                                            value={Title}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col sm={1}>No</Col>\r\n                                <Col sm={4}>景品名</Col>\r\n                                <Col sm={1}>終了</Col>\r\n                            </Row>\r\n                            {TakaraList.map(function (value, index, array) {\r\n                                return (\r\n                                    <Row>\r\n                                        <Col sm={1}>{index + 1}</Col>\r\n                                        <Col sm={4}>\r\n                                            <Form.Group className=\"mb-3 + ml-2\">\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"景品名\"\r\n                                                    onChange={e => handlechangeName(e.target.value, index)}\r\n                                                    value={value.name}\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Col>\r\n\r\n                                        <Col sm={1}>\r\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                                                <Form.Check\r\n                                                    type=\"checkbox\"\r\n                                                    //label=\"終了\"\r\n                                                    onChange={e => handlechangeFlg(e.target.checked, index)}\r\n                                                    checked={value.disabled}\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                )\r\n                            })}\r\n                        </Form>\r\n                    </div>\r\n                    < Button variant=\"info\" size=\"lg\" onClick={() => clickAddList()}>++ 追加 ++</Button>\r\n                    < Button variant=\"info\" size=\"lg\" onClick={() => saveTakaralist()}>保存</Button>\r\n                    < Button variant=\"info\" size=\"lg\" onClick={() => removeTakaralist()}>全項目削除</Button>\r\n                </Container>\r\n            </header>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Page","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, Container } from 'react-bootstrap';\r\n\r\nconst Page = () => {\r\n    // 変数定義\r\nconst navigate = useNavigate();\r\n    let title = \"Home - 抽選会\"\r\n    document.title = `${title}`\r\n\r\n    // Button Click Action\r\n    const clickMainPage = () => {\r\n        navigate(\"/main\");\r\n    }\r\n    const clickSettingPage = () => {\r\n        navigate(\"/setting\");\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <Container>\r\n                    <h2 className=\"mt-2\"><span>{title}</span></h2>\r\n                    <div className=\"text-center\">\r\n                        < Button variant=\"info\" size=\"lg\" onClick={() => clickMainPage()}>抽選Pageへ</Button>\r\n                        < Button variant=\"info\" size=\"lg\" onClick={() => clickSettingPage()}>設定Pageへ</Button>\r\n                    </div>\r\n                </Container>\r\n            </header >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Page","import React from 'react';\r\n\r\nconst Error = () => {\r\n\r\n  return (\r\n    <div>\r\n      <h1>404</h1>\r\n      <p>Sorry, the page you're looking con not found.</p>\r\n    </div>\r\n  )\r\n}\r\nexport default Error;","import React from 'react';\r\nimport { BrowserRouter , Routes, Route } from 'react-router-dom';\r\nimport { MainPage, SettingPage } from './components/takara';\r\nimport { ErrorPage, HomePage } from './components/main';\r\nimport \"./App.css\";\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Routes>\r\n        <Route path='/' element={<HomePage />} />\r\n        <Route path='/main' element={<MainPage />} />\r\n        <Route path='/setting' element={<SettingPage />} />\r\n        <Route path='/*' element={<ErrorPage/>} /> {/*not foundの時*/}\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}