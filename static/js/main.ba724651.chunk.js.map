{"version":3,"sources":["components/takara/images/animation1.gif","components/takara/images/animation2.gif","components/takara/main.jsx","components/takara/settings.jsx","components/main/main.jsx","components/main/ErrorPage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Page","title","localStorage","getItem","document","concat","_useState","useState","_useState2","Object","slicedToArray","ViewSts","setViewSts","_useState3","_useState4","TakaraName","setTakaraName","_useState5","disabled","name","_useState6","TakaraList","setTakaraList","_useState7","value","label","_useState8","AnimationName","setAnimationName","_useWindowSize","useWindowSize","width","height","_useState9","_useState10","Timeoutid","setTimeoutid","useEffect","data","JSON","parse","data2","clickTakaraNo","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","index","copy","wrap","_context","prev","next","setItem","stringify","setTimeout","reloadSelect2Page","stop","_x","apply","this","arguments","_ref2","_callee2","id","_context2","reloadMainPage","_ref3","_callee3","_context3","clearTimeout","react_default","createElement","className","CircularProgress","color","src","animation1","alt","animation2","Container","react_confetti_min_default","recycle","role","aria-label","Button","variant","onClick","fluid","size","checkResult","endCheckflg","randomno","Math","floor","random","length","i","alert","clickRandommode","map","array","buttonVariant","slice","Title","setTitle","navigate","useNavigate","AnimationList","removeTakaralist","window","confirm","removeItem","location","reload","saveTakaralist","clickAddList","toConsumableArray","handlechangeName","e","_x2","handlechangeFlg","_x3","_x4","clasName","style","textAlign","Form","Row","Col","sm","react_select_esm","options","onChange","defaultValue","Group","Control","type","placeholder","target","controlId","Check","checked","Error","App","react_router_dom","basename","process","react_router","path","element","main_main","main","settings","ErrorPage","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.ba724651.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/animation1.6acae9c3.gif\";","module.exports = __webpack_public_path__ + \"static/media/animation2.987b8d82.gif\";","import React, { useEffect, useState } from 'react';\r\nimport { Button, Container } from 'react-bootstrap';\r\nimport Confetti from 'react-confetti'\r\nimport useWindowSize from 'react-use/lib/useWindowSize'\r\nimport animation1 from \"./images/animation1.gif\";\r\nimport animation2 from \"./images/animation2.gif\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nconst Page = () => {\r\n    // 変数定義\r\n    let title = localStorage.getItem('takaratitle')\r\n    if (!title) {\r\n        title = \"抽選会\"\r\n    }\r\n    document.title = `${title}`\r\n    const [ViewSts, setViewSts] = useState(\"Loading\")\r\n    const [TakaraName, setTakaraName] = useState(null)\r\n    const [TakaraList, setTakaraList] = useState(\r\n        [\r\n            { disabled: false, name: \"[サンプル]景品①\" },\r\n            { disabled: false, name: \"[サンプル]景品②\" },\r\n        ]\r\n    )\r\n    const [AnimationName, setAnimationName] = useState({ value: '1', label: 'スタンダード' })\r\n    const { width, height } = useWindowSize()\r\n    const [Timeoutid, setTimeoutid] = useState(null)\r\n\r\n    // 初回処理\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem('takaralist'));\r\n        if (data) {\r\n            setTakaraList(data)\r\n        }\r\n        const data2 = JSON.parse(localStorage.getItem('animation'));\r\n        if (data2) {\r\n            setAnimationName(data2)\r\n        }\r\n        setViewSts(\"Main\")\r\n    }, []);\r\n\r\n    // Button Click Action\r\n    const clickTakaraNo = async (index) => {\r\n        // 抽選中画面表示\r\n        setViewSts(\"selected1\")\r\n\r\n        // フラグ書き換え・localstrage更新\r\n        const copy = TakaraList.concat()\r\n        copy[index].disabled = true\r\n        setTakaraList(copy)\r\n        localStorage.setItem('takaralist', JSON.stringify(copy));\r\n\r\n        // 景品取得・表示\r\n        setTakaraName(copy[index].name)\r\n        setTimeout(reloadSelect2Page, 5 * 1000);\r\n    }\r\n    const clickReload = () => {\r\n        //window.location.reload(1);\r\n        reloadMainPage()\r\n    }\r\n    const clickRandommode = () => {\r\n        let checkResult = TakaraList    // 抽選実施有無の管理\r\n        let endCheckflg = false\r\n        while (true) {\r\n            // 結果登録用配列作成\r\n            const randomno = Math.floor(Math.random() * TakaraList.length);\r\n            if (TakaraList[randomno].disabled === false && TakaraList[randomno].name) {\r\n                clickTakaraNo(randomno)\r\n                break;\r\n            } else {\r\n                checkResult[randomno].disabled = true\r\n            }\r\n            for (let i = 0; i < checkResult.length; i++) {\r\n                if (checkResult[i].disabled === false) {\r\n                    break;\r\n                } else if (i === checkResult.length - 1) {\r\n                    alert(\"抽選可能な番号がありません\")\r\n                    endCheckflg = true  // whileから抜ける為のflg\r\n                    break;\r\n                }\r\n            }\r\n            if (endCheckflg === true) {\r\n                break;  // whileから抜ける\r\n            }\r\n        }\r\n    }\r\n\r\n    // ページ遷移関数\r\n    const reloadSelect2Page = async () => {\r\n        setViewSts(\"selected2\")\r\n        let id = setTimeout(reloadMainPage, 60 * 1000)\r\n        setTimeoutid(id)\r\n    }\r\n    const reloadMainPage = async () => {\r\n        clearTimeout(Timeoutid)\r\n        setTakaraName(null)\r\n        setViewSts(\"Main\")\r\n    }\r\n\r\n    // ページレイアウト\r\n    if (ViewSts === \"Loading\") {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"Main-header\">\r\n                    <h4>Now Loading...</h4>\r\n                    <CircularProgress color=\"secondary\" />\r\n                </header>\r\n            </div>\r\n        )\r\n    } else if (ViewSts === \"selected1\") {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <div className=\"resizeimage + text-center\">\r\n                    {(() => {\r\n                        if (AnimationName.value === '1') {\r\n                            return (<img src={animation1} alt=\"抽選中......\" />)\r\n                        } else {\r\n                            return (<img src={animation2} alt=\"抽選中......\" />)\r\n                        }\r\n                    })()}\r\n                </div>\r\n            </header>\r\n        )\r\n    } else if (ViewSts === \"selected2\") {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <Container>\r\n                    <Confetti\r\n                        width={width}\r\n                        height={height}\r\n                        recycle={true}\r\n                    />\r\n                    <h2><span role=\"img\" aria-label=\"cracker\">🎉🎉抽 選 結 果🎉🎉</span></h2>\r\n                    <h3>{TakaraName}</h3>\r\n                </Container>\r\n                <Button variant=\"button\" className=\"text-muted\" onClick={clickReload}>メインページへ</Button>\r\n            </header>\r\n        )\r\n    } else if (ViewSts === \"Main\") {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <Container fluid className=\"center\">\r\n                        <h2 className=\"mt-2\"><span>{title}</span></h2>\r\n                        <div className=\"mb-2\">\r\n                            < Button variant=\"danger\" size=\"lg\" onClick={() => clickRandommode()}>神様にまかせるボタン</Button>\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            {TakaraList.map(function (value, index, array) {\r\n                                let buttonVariant\r\n                                if (index % 2 === 0) {\r\n                                    buttonVariant = \"btn-circle-3d-1\"\r\n                                } else {\r\n                                    buttonVariant = \"btn-circle-3d-2\"\r\n                                }\r\n                                if (value.disabled === false && value.name) {\r\n                                    return (\r\n                                        < button className={buttonVariant} onClick={() => clickTakaraNo(index)}>{('00' + (index + 1)).slice(-3)}</button>\r\n                                    )\r\n                                } else {\r\n                                    return (\r\n                                        < button className=\"btn-circle-3d-gray\" disabled>{('00' + (index + 1)).slice(-3)}</button>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    </Container>\r\n                </header >\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Page","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, Container, Col, Form, Row } from 'react-bootstrap';\r\nimport Select from 'react-select'\r\n\r\nconst Page = () => {\r\n    // 変数定義\r\n    const [Title, setTitle] = useState(localStorage.getItem('takaratitle'))\r\n    if (!Title) {\r\n        setTitle(\"抽選会\")\r\n    }\r\n    document.title = `抽選会 - 設定`\r\n    const navigate = useNavigate()\r\n    const [TakaraList, setTakaraList] = useState(\r\n        [\r\n            { disabled: false, name: \"[サンプル]景品①\" },\r\n            { disabled: false, name: \"[サンプル]景品②\" },\r\n        ]\r\n    )\r\n    const [AnimationList, ] = useState([{ value: '1', label: 'スタンダード' }, { value: '2', label: 'オリジナル' }])\r\n    const [AnimationName, setAnimationName] = useState(AnimationList[0])\r\n\r\n    // 初回処理\r\n    useEffect(() => {\r\n        // 抽選リスト取得\r\n        const data = JSON.parse(localStorage.getItem('takaralist'));\r\n        if (data) {\r\n            setTakaraList(data)\r\n        }\r\n        // 抽選中アニメーション選択\r\n        const data2 = JSON.parse(localStorage.getItem('animation'));\r\n        if (data2) {\r\n            setAnimationName(data2)\r\n        }\r\n    }, []);\r\n\r\n    // Button Click Action\r\n    const removeTakaralist = () => {\r\n        const result = window.confirm('本当によろしいですか？');\r\n        if (result === true) {\r\n            localStorage.removeItem(\"takaralist\");\r\n            localStorage.removeItem(\"takaratitle\");\r\n            localStorage.removeItem(\"animation\");\r\n            window.location.reload();\r\n        }\r\n    }\r\n    const saveTakaralist = () => {\r\n        localStorage.setItem('takaralist', JSON.stringify(TakaraList));\r\n        localStorage.setItem('animation', JSON.stringify(AnimationName));\r\n        localStorage.setItem('takaratitle', Title);\r\n        const result = window.confirm('保存成功! MainPageに遷移しますか？');\r\n        if (result === true) {\r\n            navigate(\"/\");\r\n        }\r\n    }\r\n    const clickAddList = async () => {\r\n        setTakaraList([...TakaraList, { disabled: false, name: null }]);\r\n    }\r\n    const handlechangeName = async (e, index) => {\r\n        const copy = TakaraList.concat()\r\n        copy[index].name = e\r\n        setTakaraList(copy)\r\n    }\r\n    const handlechangeFlg = async (e, index) => {\r\n        const copy = TakaraList.concat()\r\n        copy[index].disabled = e\r\n        setTakaraList(copy)\r\n    }\r\n\r\n    // ページレイアウト\r\n    return (\r\n        <div className=\"App\">\r\n            <header clasName=\"App-header\">\r\n                <Container className=\"center\">\r\n                    <h2 className=\"mt-2\"><span>設定</span></h2>\r\n                    < Button variant=\"info\" size=\"lg\" onClick={() => clickAddList()}>++ 追加 ++</Button>\r\n                    < Button variant=\"info\" size=\"lg\" onClick={() => saveTakaralist()}>保存</Button>\r\n                    < Button variant=\"info\" size=\"lg\" onClick={() => removeTakaralist()}>全項目削除</Button>\r\n                    <div className=\"card\" style={{ textAlign: \"left\" }}>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col sm={1}>抽選中画面</Col>\r\n                                <Col sm={4}>\r\n                                    <Select\r\n                                        options={AnimationList}\r\n                                        onChange={e => setAnimationName(e)}\r\n                                        //placeholder=\"Select Category...\"\r\n                                        //isClearable={true}\r\n                                        //isSearchable={true}\r\n                                        //isLoading={LoadFlg}\r\n                                        defaultValue={AnimationName}\r\n                                        //isDisabled={query.flg !== undefined ? true : false}\r\n                                        value={AnimationName}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col sm={1}>タイトル</Col>\r\n                                <Col sm={4}>\r\n                                    <Form.Group className=\"mb-3 + ml-2\">\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"タイトル\"\r\n                                            onChange={e => setTitle(e.target.value)}\r\n                                            value={Title}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col sm={1}>No</Col>\r\n                                <Col sm={4}>景品名</Col>\r\n                                <Col sm={1}>終了</Col>\r\n                            </Row>\r\n                            {TakaraList.map(function (value, index, array) {\r\n                                return (\r\n                                    <Row>\r\n                                        <Col sm={1}>{index + 1}</Col>\r\n                                        <Col sm={4}>\r\n                                            <Form.Group className=\"mb-3 + ml-2\">\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"景品名\"\r\n                                                    onChange={e => handlechangeName(e.target.value, index)}\r\n                                                    value={value.name}\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Col>\r\n\r\n                                        <Col sm={1}>\r\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                                                <Form.Check\r\n                                                    type=\"checkbox\"\r\n                                                    //label=\"終了\"\r\n                                                    onChange={e => handlechangeFlg(e.target.checked, index)}\r\n                                                    checked={value.disabled}\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                )\r\n                            })}\r\n                        </Form>\r\n                    </div>\r\n                    < Button variant=\"info\" size=\"lg\" onClick={() => clickAddList()}>++ 追加 ++</Button>\r\n                    < Button variant=\"info\" size=\"lg\" onClick={() => saveTakaralist()}>保存</Button>\r\n                    < Button variant=\"info\" size=\"lg\" onClick={() => removeTakaralist()}>全項目削除</Button>\r\n                </Container>\r\n            </header>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Page","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, Container } from 'react-bootstrap';\r\n\r\nconst Page = () => {\r\n    // 変数定義\r\nconst navigate = useNavigate();\r\n    let title = \"Home - 抽選会\"\r\n    document.title = `${title}`\r\n\r\n    // Button Click Action\r\n    const clickMainPage = () => {\r\n        navigate(\"/main\");\r\n    }\r\n    const clickSettingPage = () => {\r\n        navigate(\"/setting\");\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <Container>\r\n                    <h2 className=\"mt-2\"><span>{title}</span></h2>\r\n                    <div className=\"text-center\">\r\n                        < Button variant=\"info\" size=\"lg\" onClick={() => clickMainPage()}>抽選Pageへ</Button>\r\n                        < Button variant=\"info\" size=\"lg\" onClick={() => clickSettingPage()}>設定Pageへ</Button>\r\n                    </div>\r\n                </Container>\r\n            </header >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Page","import React from 'react';\r\n\r\nconst Error = () => {\r\n\r\n  return (\r\n    <div>\r\n      <h1>404</h1>\r\n      <p>Sorry, the page you're looking con not found.</p>\r\n    </div>\r\n  )\r\n}\r\nexport default Error;","import React from 'react';\r\nimport { BrowserRouter , Routes, Route } from 'react-router-dom';\r\nimport { MainPage, SettingPage } from './components/takara';\r\nimport { ErrorPage, HomePage } from './components/main';\r\nimport \"./App.css\";\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Routes>\r\n        <Route path='/' element={<HomePage />} />\r\n        <Route path='/main' element={<MainPage />} />\r\n        <Route path='/setting' element={<SettingPage />} />\r\n        <Route path='/*' element={<ErrorPage/>} /> {/*not foundの時*/}\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}